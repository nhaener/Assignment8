# Combine your vectors `names`, `math_grades`, and `spanish_grades` into a data.frame called `students`
students <- data.frame(names, math_grades, spanish_grades)
# Create a variable `num_rows` that contains the number of rows in your data.frame `students`
num_rows <- nrow(students)
# Create a variable `num_columns` that contains the number of columns in your data.frame `students`
num_columns <- ncol(students)
# Using `cbind`, create a new data.frame called `grades` that includes the `students` dataframe, and a new colum `grade_diff`
# grade_diff should be the `students$math_grades` column minus the `students$spanish_grades` column in the data.frame
grades <- cbind(students, students$math_grades - students$spanish_grades)
View(grades)
View(tail(grades))
View(grades[3])
colnames(grades[4]) <- 'grade_diff'
View(grades)
colnames(grades[4]) <- 'grade_diff'
View(grades)
grades[4] <- 'grade_diff'
View(grades)
grades$better_at_math <- c((students$math_grades - students$spanish_grades) > 0)
View(grades)
names <- c('Kasey', 'Nick', 'Justin', 'Sally', 'Jen')
# Create a vector `math_grades` with 5 hypothetical grades (0 - 100) in a math course (that correspond to the 5 names above)
math_grades <- c(96,82,63,76,59)
# Create a vector `spanish_grades` with 5 hypothetical grades (0 - 100) in a spanish course (that correspond to the 5 names above)
spanish_grades <- c(84,91,65,78,95)
# Combine your vectors `names`, `math_grades`, and `spanish_grades` into a data.frame called `students`
students <- data.frame(names, math_grades, spanish_grades)
# Create a variable `num_rows` that contains the number of rows in your data.frame `students`
num_rows <- nrow(students)
# Create a variable `num_columns` that contains the number of columns in your data.frame `students`
num_columns <- ncol(students)
# Using `cbind`, create a new data.frame called `grades` that includes the `students` dataframe, and a new colum `grade_diff`
# grade_diff should be the `students$math_grades` column minus the `students$spanish_grades` column in the data.frame
grades <- cbind(students, students$math_grades - students$spanish_grades)
# Rename the last column of `grades`to `grade_diff`
# Assign a new variable `grades$better_at_math` as a boolean (TRUE/FALSE) variable if a student got a better grade in Math
grades$better_at_math <- c((students$math_grades - students$spanish_grades) > 0)
View(grades)
names <- c('Kasey', 'Nick', 'Justin', 'Sally', 'Jen')
# Create a vector `math_grades` with 5 hypothetical grades (0 - 100) in a math course (that correspond to the 5 names above)
math_grades <- c(96,82,63,76,59)
# Create a vector `spanish_grades` with 5 hypothetical grades (0 - 100) in a spanish course (that correspond to the 5 names above)
spanish_grades <- c(84,91,65,78,95)
# Combine your vectors `names`, `math_grades`, and `spanish_grades` into a data.frame called `students`
students <- data.frame(names, math_grades, spanish_grades)
# Create a variable `num_rows` that contains the number of rows in your data.frame `students`
num_rows <- nrow(students)
# Create a variable `num_columns` that contains the number of columns in your data.frame `students`
num_columns <- ncol(students)
# Using `cbind`, create a new data.frame called `grades` that includes the `students` dataframe, and a new colum `grade_diff`
# grade_diff should be the `students$math_grades` column minus the `students$spanish_grades` column in the data.frame
grades <- cbind(students, students$math_grades - students$spanish_grades)
# Rename the last column of `grades`to `grade_diff`
colnames(grades)[4] <- 'grade_diff'
# Assign a new variable `grades$better_at_math` as a boolean (TRUE/FALSE) variable if a student got a better grade in Math
grades$better_at_math <- c((students$math_grades - students$spanish_grades) > 0)
View(grades)
num_better_at_math <- grades$better_at_math == TRUE
setwd('/c/Users/MyPC/info498f/a3-using-data/')
# Create a vector `names` with 5 names in it
names <- c('Kasey', 'Nick', 'Justin', 'Sally', 'Jen')
# Create a vector `math_grades` with 5 hypothetical grades (0 - 100) in a math course (that correspond to the 5 names above)
math_grades <- c(96,82,63,76,59)
# Create a vector `spanish_grades` with 5 hypothetical grades (0 - 100) in a spanish course (that correspond to the 5 names above)
spanish_grades <- c(84,91,65,78,95)
# Combine your vectors `names`, `math_grades`, and `spanish_grades` into a data.frame called `students`
students <- data.frame(names, math_grades, spanish_grades)
# Create a variable `num_rows` that contains the number of rows in your data.frame `students`
num_rows <- nrow(students)
# Create a variable `num_columns` that contains the number of columns in your data.frame `students`
num_columns <- ncol(students)
# Using `cbind`, create a new data.frame called `grades` that includes the `students` dataframe, and a new colum `grade_diff`
# grade_diff should be the `students$math_grades` column minus the `students$spanish_grades` column in the data.frame
grades <- cbind(students, students$math_grades - students$spanish_grades)
# Rename the last column of `grades`to `grade_diff`
colnames(grades)[4] <- 'grade_diff'
# Assign a new variable `grades$better_at_math` as a boolean (TRUE/FALSE) variable if a student got a better grade in Math
grades$better_at_math <- c((students$math_grades - students$spanish_grades) > 0)
View(grades)
num_better_at_math <- grades$better_at_math == TRUE
num_better_at_math <- grades[better_at_math == TRUE]
num_better_at_math <- (students$math_grades - students$spanish_grades) > 0
num_better_at_math <- grades$grade_diff > 0
num_better_at_math <- (grades$grade_diff > 0)
num_better_at_math <- sum(grades$grade_diff > 0)
num_better_at_math <- sum(grades$math_grades > grades$spanish_grades)
write.csv(grades, 'data/grades.csv')
write.csv('data/grades.csv')
setwd('/c/Users/MyPC/info498f/a3-using-data/')
# Create a vector `names` with 5 names in it
names <- c('Kasey', 'Nick', 'Justin', 'Sally', 'Jen')
# Create a vector `math_grades` with 5 hypothetical grades (0 - 100) in a math course (that correspond to the 5 names above)
math_grades <- c(96,82,63,76,59)
# Create a vector `spanish_grades` with 5 hypothetical grades (0 - 100) in a spanish course (that correspond to the 5 names above)
spanish_grades <- c(84,91,65,78,95)
# Combine your vectors `names`, `math_grades`, and `spanish_grades` into a data.frame called `students`
students <- data.frame(names, math_grades, spanish_grades)
# Create a variable `num_rows` that contains the number of rows in your data.frame `students`
num_rows <- nrow(students)
# Create a variable `num_columns` that contains the number of columns in your data.frame `students`
num_columns <- ncol(students)
# Using `cbind`, create a new data.frame called `grades` that includes the `students` dataframe, and a new colum `grade_diff`
# grade_diff should be the `students$math_grades` column minus the `students$spanish_grades` column in the data.frame
grades <- cbind(students, students$math_grades - students$spanish_grades)
# Rename the last column of `grades`to `grade_diff`
colnames(grades)[4] <- 'grade_diff'
# Assign a new variable `grades$better_at_math` as a boolean (TRUE/FALSE) variable if a student got a better grade in Math
grades$better_at_math <- c((students$math_grades - students$spanish_grades) > 0)
View(grades)
# Create a variable `num_better_at_math` that is the number (i.e., one numeric value) of students better at math
num_better_at_math <- sum(grades$math_grades > grades$spanish_grades)
# Write your `grades` data.frame to a new .csv file inside your `data/` directory with the filename `grades.csv`.
# Make sure you're in the proper directory to write this (and later) files
write.csv('data/grades.csv')
help(write.csv)
write.csv(grades, file = 'data/grades.csv')
write.csv('data/grades.csv')
read <- read.csv('grades.csv')
View(read)
most_murders <- row.names(max(USArrests$Murder))
View(USArrests)
View(USArrests)
most_murders <- row.names(max(USArrests$Murder))
most_murders <- row.names(USArrests$max(USArrests$Murder))
data('USArrests')
View(USArrests)
# Create a variables `most_murders` that has the name of state with the highest number of murders per 100K people
most_murders <- row.names(max(USArrests$Murder))
most_murders <- max(USArrests$Murder)
most_murders <- row.names(USArrests[max(USArrests$Murder])
most_murders <- row.names(max(USArrests$Murder))
most_murders <- row.names(USArrests[USArrests$murder == max(USArrests$Murder)])
most_murders <- row.names(USArrests[max(USArrests$Murder)])
most_murders <- row.names(USArrests[0] == max(USArrests$Murder))
most_murders <- row.names(USArrests == max(USArrests$Murder))
life_expectancy <- read.csv('data/life_expectancy.csv')
# Determine if `life_expectancy` is a data.frame by using the is.data.frame function
is.data.frame(life_expectancy)
setwd('/c/Users/MyPC/info498f/a3-using-data/')
# Read the life_expectancy.csv file into a variable called `life_expectancy`
life_expectancy <- read.csv('data/life_expectancy.csv')
# Determine if `life_expectancy` is a data.frame by using the is.data.frame function
is.data.frame(life_expectancy)
setwd('/c/Users/MyPC/info498f/a3-using-data/data')
# Read the life_expectancy.csv file into a variable called `life_expectancy`
life_expectancy <- read.csv('life_expectancy.csv')
# Determine if `life_expectancy` is a data.frame by using the is.data.frame function
is.data.frame(life_expectancy)
setwd('/c/Users/MyPC/info498f/a3-using-data/data')
# Read the life_expectancy.csv file into a variable called `life_expectancy`
life_expectancy <- read.csv('life_expectancy.csv')
# Determine if `life_expectancy` is a data.frame by using the is.data.frame function
is.data.frame(life_expectancy)
# Using data assignment
# data.frame elements -------------------------------
setwd('/c/Users/MyPC/info498f/a3-using-data/')
# Create a vector `names` with 5 names in it
names <- c('Kasey', 'Nick', 'Justin', 'Sally', 'Jen')
# Create a vector `math_grades` with 5 hypothetical grades (0 - 100) in a math course (that correspond to the 5 names above)
math_grades <- c(96,82,63,76,59)
# Create a vector `spanish_grades` with 5 hypothetical grades (0 - 100) in a spanish course (that correspond to the 5 names above)
spanish_grades <- c(84,91,65,78,95)
# Combine your vectors `names`, `math_grades`, and `spanish_grades` into a data.frame called `students`
students <- data.frame(names, math_grades, spanish_grades)
# Create a variable `num_rows` that contains the number of rows in your data.frame `students`
num_rows <- nrow(students)
# Create a variable `num_columns` that contains the number of columns in your data.frame `students`
num_columns <- ncol(students)
# Using `cbind`, create a new data.frame called `grades` that includes the `students` dataframe, and a new colum `grade_diff`
# grade_diff should be the `students$math_grades` column minus the `students$spanish_grades` column in the data.frame
grades <- cbind(students, students$math_grades - students$spanish_grades)
# Rename the last column of `grades`to `grade_diff`
colnames(grades)[4] <- 'grade_diff'
# Assign a new variable `grades$better_at_math` as a boolean (TRUE/FALSE) variable if a student got a better grade in Math
grades$better_at_math <- c((students$math_grades - students$spanish_grades) > 0)
View(grades)
# Create a variable `num_better_at_math` that is the number (i.e., one numeric value) of students better at math
num_better_at_math <- sum(grades$math_grades > grades$spanish_grades)
# Write your `grades` data.frame to a new .csv file inside your `data/` directory with the filename `grades.csv`.
# Make sure you're in the proper directory to write this (and later) files
write.csv('data/grades.csv')
# Loading R data -------------------------------
# Load the USArrests dataset
data('USArrests')
View(USArrests)
# Create a variables `most_murders` that has the name of state with the highest number of murders per 100K people
most_murders <- row.names(USArrests == max(USArrests$Murder))
# Create a varaible `least_assaults` that has the name of the state with the lowest number of assaults per 100K people
least_assaults <- row.names(USArrests)
# Create a new column USArrests$ten_times_more as a boolean vector where there are 10X more assault arrests than murder arrests
# Create a variable `high_murders` that has the state names in which there are NOT 10X more assault arrests than murder arrests
# Write a function `state_info` that returns a sentence describing the state's murder and assault rates
# Using your `state_info` variable, create a variable `colorado_info` that has the state's murder and assault rates
# Write the `USArrests` data.frame to a new .csv file in your `data/` directory with the filename `USArrests.csv`
# Reading in data -------------------------------
# Read the life_expectancy.csv file into a variable called `life_expectancy`
life_expectancy <- read.csv('life_expectancy.csv')
# Determine if `life_expectancy` is a data.frame by using the is.data.frame function
is.data.frame(life_expectancy)
# Using data assignment
# data.frame elements -------------------------------
setwd('/c/Users/MyPC/info498f/a3-using-data/')
# Create a vector `names` with 5 names in it
names <- c('Kasey', 'Nick', 'Justin', 'Sally', 'Jen')
# Create a vector `math_grades` with 5 hypothetical grades (0 - 100) in a math course (that correspond to the 5 names above)
math_grades <- c(96,82,63,76,59)
# Create a vector `spanish_grades` with 5 hypothetical grades (0 - 100) in a spanish course (that correspond to the 5 names above)
spanish_grades <- c(84,91,65,78,95)
# Combine your vectors `names`, `math_grades`, and `spanish_grades` into a data.frame called `students`
students <- data.frame(names, math_grades, spanish_grades)
# Create a variable `num_rows` that contains the number of rows in your data.frame `students`
num_rows <- nrow(students)
# Create a variable `num_columns` that contains the number of columns in your data.frame `students`
num_columns <- ncol(students)
# Using `cbind`, create a new data.frame called `grades` that includes the `students` dataframe, and a new colum `grade_diff`
# grade_diff should be the `students$math_grades` column minus the `students$spanish_grades` column in the data.frame
grades <- cbind(students, students$math_grades - students$spanish_grades)
# Rename the last column of `grades`to `grade_diff`
colnames(grades)[4] <- 'grade_diff'
# Assign a new variable `grades$better_at_math` as a boolean (TRUE/FALSE) variable if a student got a better grade in Math
grades$better_at_math <- c((students$math_grades - students$spanish_grades) > 0)
View(grades)
# Create a variable `num_better_at_math` that is the number (i.e., one numeric value) of students better at math
num_better_at_math <- sum(grades$math_grades > grades$spanish_grades)
# Write your `grades` data.frame to a new .csv file inside your `data/` directory with the filename `grades.csv`.
# Make sure you're in the proper directory to write this (and later) files
write.csv('data/grades.csv')
# Loading R data -------------------------------
# Load the USArrests dataset
data('USArrests')
View(USArrests)
# Create a variables `most_murders` that has the name of state with the highest number of murders per 100K people
most_murders <- row.names(USArrests == max(USArrests$Murder))
# Create a varaible `least_assaults` that has the name of the state with the lowest number of assaults per 100K people
least_assaults <- row.names(USArrests)
# Create a new column USArrests$ten_times_more as a boolean vector where there are 10X more assault arrests than murder arrests
# Create a variable `high_murders` that has the state names in which there are NOT 10X more assault arrests than murder arrests
# Write a function `state_info` that returns a sentence describing the state's murder and assault rates
# Using your `state_info` variable, create a variable `colorado_info` that has the state's murder and assault rates
# Write the `USArrests` data.frame to a new .csv file in your `data/` directory with the filename `USArrests.csv`
# Reading in data -------------------------------
# Read the life_expectancy.csv file into a variable called `life_expectancy`
life_expectancy <- read.csv("data/life_expectancy.csv")
# Determine if `life_expectancy` is a data.frame by using the is.data.frame function
is.data.frame(life_expectancy)
pwd
most_murders <- row.names(USArrests$murder == max(USArrests$Murder))
most_murders <- row.names(USArrests[which.max(USArrests$Murder)])
most_murders <- row.names(USArrests[USArrests$Murder == max(USArrests$Murder)])
most_murders <- row.names(USArrests[which.max(USArrests$Murder)])
most_murders <- row.names(USArrests[which.max(USArrests$Murder),])
most_murders <- row.names(USArrests[which.max(USArrests$Murder),])
USArrests$ten_times_more <- c(USArrests$Assault > (10 * USArrests$Murder))
USArrests$ten_times_more <- c(USArrests$Assault > (10 * USArrests$Murder))
View(USArrests)
# Create a varia
high_murders <- row.names(!(USArrests$Assault > (10 * USArrests$Murder)))
high_murders <- row.names(USArrests[which(USArrests$Assault < (10 * USArrests$Murder)))
high_murders <- row.names(USArrests$ten_times_more == FALSE)
high_murders <- row.names(USArrests[which(USArrests$Assault < (10 * USArrests$Murder)),])
state_info <- function(state){
paste(state, 'has a murder rate of', state.Murder, 'and a assault rate of', state.Assault)
}
state_info(Hawaii)
state_info <- function(state){
paste(state, 'has a murder rate of', USAssaults$state, 'and a assault rate of')
}
state_info(Hawaii)
state_info <- function(state){
return (paste(state, 'has a murder rate of', USAssaults$state, 'and a assault rate of'))
}
state_info(Washington)
state_info <- function(state){
return (paste(state, 'has a murder rate of', USAssaults[state, 'Murder'], 'and a assault rate of', USAssaults[state,'Assault']))
}
state_info(Hawaii)
state_info <- function(state){
val <- paste(state, 'has a murder rate of',  'and a assault rate of', state)
return(val)
}
state_info(Hawaii)
# Read the life_expectancy.csv file into a variable called `life_expectancy`
life_expectancy <- read.csv("life_expectancy.csv")
# Determine if `life_expectancy` is a data.frame by using the is.data.frame function
is.data.frame(life_expectancy)
setwd('/c/Users/MyPC/info498f/a3-using-data/data')
# Read the life_expectancy.csv file into a variable called `life_expectancy`
life_expectancy <- read.csv("life_expectancy.csv")
# Determine if `life_expectancy` is a data.frame by using the is.data.frame function
is.data.frame(life_expectancy)
setwd('/c/Users/MyPC/info498f/a3-using-data/')
# Read the life_expectancy.csv file into a variable called `life_expectancy`
life_expectancy <- read.csv("data/life_expectancy.csv")
# Determine if `life_expectancy` is a data.frame by using the is.data.frame function
is.data.frame(life_expectancy)
setwd('/c/Users/MyPC/info498f/a3-using-data/')
# Read the life_expectancy.csv file into a variable called `life_expectancy`
lifeExpectancy <- read.csv("data/life_expectancy.csv")
# Determine if `life_expectancy` is a data.frame by using the is.data.frame function
is.data.frame(lifeExpectancy)
setwd('/c/Users/MyPC/info498f/a3-using-data')
# Read the life_expectancy.csv file into a variable called `life_expectancy`
lifeExpectancy <- read.csv("\data\life_expectancy.csv")
# Determine if `life_expectancy` is a data.frame by using the is.data.frame function
is.data.frame(lifeExpectancy)
state_info(Washington)
paste("blah")
paste('blah')
state
most_murders
paste0(state, 'has a murder rate of',  'and a assault rate of', state)
state = "Washington"
paste0(state, 'has a murder rate of',  'and a assault rate of', state)
state_info("Colorado")
write.csv(USArrests, file = "data/USArrests.csv")
write.csv(USArrests, file = "data/USArrests.csv", append = FALSE)
write.csv(USArrests, file = "USArrests.csv", append = FALSE)
write.csv(data.frame(USArrests), file = "USArrests.csv", append = FALSE)
write.csv(data.frame(USArrests), file = "USArrests.csv", append = TRUE)
paste0(state, 'has a murder rate of', USArrests$Murder[which(row.names(state))],   'and a assault rate of', state)
lifeExpectancy <- read.csv("data\\life_expectancy.csv")
life_expectancy
setwd('/c/Users/MyPC/info498f/a3-using-data')
# Read the life_expectancy.csv file into a variable called `life_expectancy`
life_expectancy <- read.csv("data/life_expectancy.csv")
# Determine if `life_expectancy` is a data.frame by using the is.data.frame function
is.data.frame(life_expectancy)
# Using data assignment
# data.frame elements -------------------------------
setwd('/c/Users/MyPC/info498f/a3-using-data/')
# Create a vector `names` with 5 names in it
names <- c('Kasey', 'Nick', 'Justin', 'Sally', 'Jen')
# Create a vector `math_grades` with 5 hypothetical grades (0 - 100) in a math course (that correspond to the 5 names above)
math_grades <- c(96,82,63,76,59)
# Create a vector `spanish_grades` with 5 hypothetical grades (0 - 100) in a spanish course (that correspond to the 5 names above)
spanish_grades <- c(84,91,65,78,95)
# Combine your vectors `names`, `math_grades`, and `spanish_grades` into a data.frame called `students`
students <- data.frame(names, math_grades, spanish_grades)
# Create a variable `num_rows` that contains the number of rows in your data.frame `students`
num_rows <- nrow(students)
# Create a variable `num_columns` that contains the number of columns in your data.frame `students`
num_columns <- ncol(students)
# Using `cbind`, create a new data.frame called `grades` that includes the `students` dataframe, and a new colum `grade_diff`
# grade_diff should be the `students$math_grades` column minus the `students$spanish_grades` column in the data.frame
grades <- cbind(students, students$math_grades - students$spanish_grades)
# Rename the last column of `grades`to `grade_diff`
colnames(grades)[4] <- 'grade_diff'
# Assign a new variable `grades$better_at_math` as a boolean (TRUE/FALSE) variable if a student got a better grade in Math
grades$better_at_math <- c((students$math_grades - students$spanish_grades) > 0)
View(grades)
# Create a variable `num_better_at_math` that is the number (i.e., one numeric value) of students better at math
num_better_at_math <- sum(grades$math_grades > grades$spanish_grades)
# Write your `grades` data.frame to a new .csv file inside your `data/` directory with the filename `grades.csv`.
# Make sure you're in the proper directory to write this (and later) files
write.csv('data/grades.csv')
# Loading R data -------------------------------
# Load the USArrests dataset
data('USArrests')
View(USArrests)
# Create a variables `most_murders` that has the name of state with the highest number of murders per 100K people
most_murders <- row.names(USArrests[which.max(USArrests$Murder),])
# Create a varaible `least_assaults` that has the name of the state with the lowest number of assaults per 100K people
least_assaults <- row.names(USArrests[which.min(USArrests$Murder),])
# Create a new column USArrests$ten_times_more as a boolean vector where there are 10X more assault arrests than murder arrests
USArrests$ten_times_more <- c(USArrests$Assault > (10 * USArrests$Murder))
# Create a variable `high_murders` that has the state names in which there are NOT 10X more assault arrests than murder arrests
high_murders <- row.names(USArrests[which(USArrests$Assault < (10 * USArrests$Murder)),])
# Write a function `state_info` that returns a sentence describing the state's murder and assault rates
state_info <- function(state){
val <- paste0(state, 'has a murder rate of', USArrests$Murder[which(row.names(state))],   'and a assault rate of', state)
return(val)
}
# Using your `state_info` variable, create a variable `colorado_info` that has the state's murder and assault rates
colorado_info <- state_info("Colorado")
# Write the `USArrests` data.frame to a new .csv file in your `data/` directory with the filename `USArrests.csv`
write.csv("USArrests.csv")
# Reading in data -------------------------------
# Read the life_expectancy.csv file into a variable called `life_expectancy`
life_expectancy <- read.csv("data/life_expectancy.csv")
# Determine if `life_expectancy` is a data.frame by using the is.data.frame function
is.data.frame(life_expectancy)
life_expectancy <- read.csv(file = "data/life_expectancy.csv", header=TRUE, sep=",")
life_expectancy <- read.csv(file = "life_expectancy.csv", header=TRUE, sep=",")
setwd('/c/Users/MyPC/info498f/a3-using-data/')
setwd('/c/Users/MyPC/info498f/a3-using-data/data')
getwd()
setwd('/c/Users/MyPC/info498f/a3-using-data/data')
getwd()
setwd('/c/Users/MyPC/info498f/a3-using-data/'))
setwd("/c/Users/MyPC/info498f/a3-using-data")
val <- paste0(state, 'has a murder rate of', USArrests[state, "Murder"],   'and a assault rate of', state)
Write a function `state_info` that returns a sentence describing the state's murder and assault rates
state_info <- function(state){
val <- paste0(state, 'has a murder rate of', USArrests[state, "Murder"],   'and a assault rate of', USArrests[state, "Assault"])
return(val)
}
state_info <- function(state){
val <- paste0(state, 'has a murder rate of', USArrests[state, "Murder"],   'and a assault rate of', USArrests[state, "Assault"])
return(val)
}
state_info("Colorado")
View(flights)
library(nycflights13)
library(dplyr)
# The data.frame flights should now be accessible to you.  View it,
# and get some basic information about the number of rows/columns
View(flights)
install.packages("nycflights13")
library(nycflights13)
library(dplyr)
# The data.frame flights should now be accessible to you.  View it,
# and get some basic information about the number of rows/columns
View(flights)
install.packages("dplyr")
library(nycflights13)
library(dplyr)
# The data.frame flights should now be accessible to you.  View it,
# and get some basic information about the number of rows/columns
View(flights)
dim(flights)
nrow(flights)
ncol(flights)
# Add a column that is the amount of time gained in the air
flights <- mutate(flights, gain = arr_delay - dep_delay)
# Sort your data.frame desceding by the column you just created
flights <- arrange(flights, desc(gain))
# Try doing the last 2 steps in a single operation using the pipe operator
flights <- flights %>% mutate(flights, gain = arr_delay - dep_delay) %>% arrange(flights, desc(gain))
# Make a histogram of the amount of gain using the `hist` command
hist(flights$gain)
# On average, did flights gain or lose time?
mean(flights$gain, na.rm = TRUE)
# Create a data.frame of flights headed to seatac ('SEA'),
# and only include the column you just created
to_sea <- flights %>% select(dest, gain) %>% filter(dest == SEA)
# On average, did flights to seatac gain or loose time?
mean(to_sea, na.rm = TRUE)
# Write a function that allows you to specify an origin, a destination, and a column of interest
# that returns a data.frame of flights from the origin to the destination and only the column of interest
## Hint: see slides on standard evaluation
from_orig <- function(my_origin, destination, column_interest){
val <- flights %>% filter(my_origin == origin, destination == dest) %>% select(column_interest)
return(val)
}
# Retireve the air_time column for flights from JFK to SEA
JFK_to_SEA_air_time <- from_orig('JFK', 'SEA', 'air_time')
# What was the average air time of those flights (in hours)?  What was the min/max?
mean(JFK_to_SEA_air_time, na.rm = TRUE)/60
min(JFK_to_SEA_air_time, na.rm = TRUE)/60
max(JFK_to_SEA_air_time, na.rm = TRUE)/60
### Bonus ###
# Rewrite the function above to return a list of the min, max, and mean values of the column of interest
from_orig2 <- function(my_origin, destination, column_interest){
df <- flights %>% filter(my_origin == origin, destination == dest) %>% select(column_interest)
info <- list()
#write functions needed to calculate
mean_fn <- paste0('mean(', column_interest, ' , na.rm = TRUE)')
min_fn <- paste0('min(', column_interest, ' , na.rm = TRUE)')
max_fn <- paste0('max(', column_interest, ' , na.rm = TRUE)')
#calculate info
info$mean <- summarise_(df, mean_fn)[[1]]
info$min <- summarise_(df, min_fn)[[1]]
info$max <- summarise_(df, max_fn)[[1]]
return(info)
}
# Calculate the departure delays from JFK to DEN
jfk_to_den_info <- origin_dest_interest_info('JFK', 'DEN', 'dep_delay')
### Exercise 2 ###
library(nycflights13)
library(dplyr)
max_airport_delay <- flights %>%
group_by(dest) %>%
summarise(delay = max(arr_delay, na.rm = TRUE))
library(nycflights13)
library(dplyr)
# In which month was the average departure delay the greatest?
# Hint: you'll have to perform a grouping operation before summarizing your data
avg_dep_delay_month <- flights %>%
group_by(month) %>%
summarise(delay = mean(dep_delay, na.rm = TRUE))
# If you create a data.frame with the columns "month", and "delay" above, you should be able to create
# a scatterplot by passing it to the 'plot' function
plot(avg_dep_delay_month)
# In which airport were the average arrival delays the highest?
# Hint: you'll have to perform a grouping operation before summarizing your data
max_airport_delay <- flights %>%
group_by(dest) %>%
summarise(delay = max(arr_delay, na.rm = TRUE))
### Bonus ###
# Which city was flown to with the highest average speed?
city_by_speed <- flights %>%
mutate(speed = distance/air_time * 60) %>%
group_by(dest) %>%
summarise(avg_speed = mean(s
max_airport_delay
setwd('/c/Users/MyPC/info498f/a4-data-wrangling')
library(dplyr)
#Read in csv files
any_drink <- read.csv('data/any_drinking.csv')
binge_drink <- read.csv('data/binge_drinking.csv')
View(any_drink)
View(binge_drink)
setwd('/c/Users/MyPC/info498f/a4-data-wrangling')
library(dplyr)
getwd()
shinyUI(
fluidPage(
# Application title
titlePanel("Hello Shiny!")
)
)
shiny::runApp('C:/Users/MyPC/info498f/Assignment8')
